.\run_tester_multiple.ps1 -Trials 20 -LoopsValue 10 -SolutionName toml1s -CorrectionPrompt 'You are generating a Chainlink job configuration in TOML format specifically for local testing purposes using the job type "directrequest". Do not create any other type of job. The resulting TOML file must define a minimal but fully functional Chainlink job capable of running entirely locally on your Chainlink node, without any external blockchain interactions. The job listens internally for oracle requests simulated by manually triggering the node (not via a real smart contract). Once triggered, it should: Perform an HTTP GET request to the CoinGecko API endpoint to fetch the current Ethereum (ETH) price in USD. Parse the JSON response to extract the Ethereum price. Multiply this price value by 100 to convert it to an integer format (managing decimals). Log or store the processed result locally within the Chainlink node (do not include steps related to blockchain transactions, decoding logs, or Ethereum transactions—omit ethtx and similar steps). The job TOML must include only essential fields: (i) type = "directrequest"; (ii) schemaVersion = 1; (iii) name (a short descriptive name); (iv) externalJobID (generate a new random UUID); (v) evmChainID (use a local test identifier like 1337); and (vi) maxTaskDuration (e.g., "30s"). Do NOT include blockchain-specific fields such as contractAddress, forwardingAllowed, minIncomingConfirmations, or minContractPaymentLinkJuels. Ensure there are absolutely no comments or explanatory text within the TOML itself. The observationSource block must clearly define exactly these tasks in order: (1) HTTP GET request to CoinGecko; (2) JSON parsing; (3) Value multiplication; (4) Local logging/storage step. This configuration will be suitable for immediate local testing on a Chainlink node running in complete isolation from external blockchain networks. Very important: Do not use a bridge. Use a standard adapter that does not require prior creation. Do not comment on the TOML code under any circumstances. This format does not accept comments. You can ignore the attached smart contract steps, including decode_logs and any step after multiply. I just want to create the Job and run it locally in my Chainlink node for testing without the smart contract part. The UUID must be in hexadecimal, e.g. ca98366c-c731-4957-b8c0-12c72f05aeea.'