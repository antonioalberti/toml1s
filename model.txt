Description: We are building a standalone Chainlink oracle job designed for local testing and experimentation, independent of any blockchain connection or smart contract interactions. This job listens for internal webhook triggers, fetches Ethereum's current price in USD from the CoinGecko API, processes the retrieved data by parsing and scaling the price value, and logs the resulting information locally within the Chainlink node environment. Our goal is to create a simplified, fully functional local test scenario, enabling rapid development, validation, and refinement of Chainlink-based oracle pipelines without external dependencies.

Component 1: This is the script that will be tested.

File 1: config.toml

Component 2: The `main.py` file is a Python script designed for automating and managing Chainlink jobs using API requests. It performs several key functions related to handling Chainlink jobs, including user authentication, token management, job creation, execution, status polling, and deletion. The script begins by loading environment variables for credentials and configuration settings, such as the BASE_URL, EMAIL, and PASSWORD, which are retrieved from a `.env` file. Upon execution, it checks for a saved token from `chainlink_token.json` and logs in if necessary to obtain a session token. The script provides functionality to create new jobs using a TOML configuration, run jobs while actively polling for their status, and cleanup by deleting jobs afterward. It performs these operations through HTTP requests to specific endpoints related to Chainlink job management, and it utilizes JSON and environment variables extensively to handle configurations and securely manage sensitive data.

File 2: main.py
